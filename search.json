[{"path":"https://rex.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Ushey. Author, maintainer. Jim Hester. Author. Robert Krzyzanowski. Author.","code":""},{"path":"https://rex.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ushey K, Hester J, Krzyzanowski R (2023). rex: Friendly Regular Expressions. https://rex.r-lib.org, https://github.com/r-lib/rex.","code":"@Manual{,   title = {rex: Friendly Regular Expressions},   author = {Kevin Ushey and Jim Hester and Robert Krzyzanowski},   year = {2023},   note = {https://rex.r-lib.org, https://github.com/r-lib/rex}, }"},{"path":[]},{"path":"https://rex.r-lib.org/index.html","id":"friendly-regular-expressions","dir":"","previous_headings":"","what":"Friendly Regular Expressions","title":"Friendly Regular Expressions","text":"Regular expressions powerful feature, however often difficult interpret. Rex allows build complex regular expressions human readable expressions. instead writing (later trying decipher) can write expressions bit longer corresponding regular expression, much readable maintainable.","code":"r <- \"^(?:(((?:[^:])+)://))?((?:(?:(?!:/).)*)+)(?:(:([[:digit:]]+)))?(?:(/.*))?$\" r <- rex(    start,    ## match the protocol -- may exist or may not   maybe(capture(       capture(except_some_of(\":\")),       \"://\"       )),    ## match the path   capture(one_or_more(not(\":/\"))),    ## get the port   maybe(capture(\":\", capture(numbers))),    ## and the rest   maybe(capture(\"/\", anything)),    end  )"},{"path":"https://rex.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Friendly Regular Expressions","text":"","code":"install.packages(\"rex\")"},{"path":"https://rex.r-lib.org/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Friendly Regular Expressions","text":"vignettes longer form usage examples. URL Validation Webserver Log Parsing rex() function call can include number functions shortcuts. full list functions available please see ?rex ?shortcuts.","code":""},{"path":"https://rex.r-lib.org/index.html","id":"rex-mode","dir":"","previous_headings":"Usage","what":"Rex Mode","title":"Friendly Regular Expressions","text":"Rex functions exported useful within rex() calls, can temporarily attached using rex_mode() allows auto-completed.","code":""},{"path":"https://rex.r-lib.org/index.html","id":"using-rex-in-other-packages","dir":"","previous_headings":"Usage","what":"Using Rex in other packages","title":"Friendly Regular Expressions","text":"Using rex packages generate spurious NOTEs R CMD check unless include call rex::register_shortcuts() package name somewhere package source. function registers rex shortcuts valid variables fixing NOTEs.","code":""},{"path":"https://rex.r-lib.org/index.html","id":"see-also","dir":"","previous_headings":"","what":"See Also","title":"Friendly Regular Expressions","text":"Regularity - Ruby library partially inspired rex. PCRE - Perl Compatible Regular Expressions, engine rex regular expressions use. Perl 5 Regular Expressions - Perl regular expression documentation, nearly 100% compatible PCRE.","code":""},{"path":"https://rex.r-lib.org/reference/as.regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce objects to a regex. — as.regex","title":"Coerce objects to a regex. — as.regex","text":"Coerce objects regex.","code":""},{"path":"https://rex.r-lib.org/reference/as.regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce objects to a regex. — as.regex","text":"","code":"as.regex(x, ...)  # S3 method for default as.regex(x, ...)"},{"path":"https://rex.r-lib.org/reference/as.regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce objects to a regex. — as.regex","text":"x Object coerce regex. ... arguments passed methods.","code":""},{"path":"https://rex.r-lib.org/reference/as.regex.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Coerce objects to a regex. — as.regex","text":"default: Simply escape Object.","code":""},{"path":"https://rex.r-lib.org/reference/capture.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a capture group — capture","title":"Create a capture group — capture","text":"Used save matched value within group use later regular expression extract values captured.  named unnamed groups can later referenced using capture_group.","code":""},{"path":"https://rex.r-lib.org/reference/capture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a capture group — capture","text":"","code":"capture(..., name = NULL)  capture_group(name)"},{"path":"https://rex.r-lib.org/reference/capture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a capture group — capture","text":"... shortcuts, R variables, text, rex functions. name group.  Unnamed capture groups numbers starting 1 order appear regular expression.  two groups name, leftmost group used reference.","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/capture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a capture group — capture","text":"","code":"# Match paired quotation marks re <- rex(   # first quotation mark   capture(quotes),    # match all non-matching quotation marks   zero_or_more(except(capture_group(1))),    # end quotation mark (matches first)   capture_group(1) )  #named capture - don't match apples to oranges re <- rex(   capture(name = \"fruit\", or(\"apple\", \"orange\")),   \"=\",   capture_group(\"fruit\") )"},{"path":"https://rex.r-lib.org/reference/character_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Create character classes — character_class","title":"Create character classes — character_class","text":"multiple ways can define character class.","code":""},{"path":"https://rex.r-lib.org/reference/character_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create character classes — character_class","text":"","code":"character_class(x)  one_of(...)  any_of(..., type = c(\"greedy\", \"lazy\", \"possessive\"))  some_of(..., type = c(\"greedy\", \"lazy\", \"possessive\"))  none_of(...)  except_any_of(..., type = c(\"greedy\", \"lazy\", \"possessive\"))  except_some_of(..., type = c(\"greedy\", \"lazy\", \"possessive\"))  range(start, end)  `:`(start, end)  exclude_range(start, end)"},{"path":"https://rex.r-lib.org/reference/character_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create character classes — character_class","text":"x text include character class (must escaped manually) ... shortcuts, R variables, text, rex functions. type type match perform. three match types greedy: match longest string.  default matching type. lazy: match shortest string.  matches shortest string anchor point, necessarily shortest global string. possessive: match allow backtracking start beginning character class end end character class","code":""},{"path":"https://rex.r-lib.org/reference/character_class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create character classes — character_class","text":"character_class: explicitly define character class one_of: matches one specified characters. any_of: matches zero specified characters. some_of: matches one specified characters. none_of: matches anything one specified characters. except_any_of: matches zero anything specified characters. except_some_of: matches one anything specified characters. range: matches one characters range. :: matches one characters range. exclude_range: matches one characters except range.","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/character_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create character classes — character_class","text":"","code":"# grey = gray re <- rex(\"gr\", one_of(\"a\", \"e\"), \"y\") grepl(re, c(\"grey\", \"gray\")) # TRUE TRUE #> [1] TRUE TRUE  # Match non-vowels re <- rex(none_of(\"a\", \"e\", \"i\", \"o\", \"u\")) # They can also be in the same string re <- rex(none_of(\"aeiou\")) grepl(re, c(\"k\", \"l\", \"e\")) # TRUE TRUE FALSE #> [1]  TRUE  TRUE FALSE  # Match range re <- rex(range(\"a\", \"e\")) grepl(re, c(\"b\", \"d\", \"f\")) # TRUE TRUE FALSE #> [1]  TRUE  TRUE FALSE  # Explicit creation re <- rex(character_class(\"abcd\\\\[\")) grepl(re, c(\"a\", \"d\", \"[\", \"]\")) # TRUE TRUE TRUE FALSE #> [1]  TRUE  TRUE  TRUE FALSE"},{"path":"https://rex.r-lib.org/reference/character_class_escape.html","id":null,"dir":"Reference","previous_headings":"","what":"Character class escapes — character_class_escape","title":"Character class escapes — character_class_escape","text":"Character class escapes","code":""},{"path":"https://rex.r-lib.org/reference/character_class_escape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Character class escapes — character_class_escape","text":"","code":"character_class_escape(x)  # S3 method for regex character_class_escape(x)  # S3 method for character_class character_class_escape(x)  # S3 method for character character_class_escape(x)  # S3 method for list character_class_escape(x)  # S3 method for default character_class_escape(x)"},{"path":"https://rex.r-lib.org/reference/character_class_escape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Character class escapes — character_class_escape","text":"x Object escape.","code":""},{"path":"https://rex.r-lib.org/reference/character_class_escape.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Character class escapes — character_class_escape","text":"regex: objects passed unchanged. character_class: objects passed unchanged. character: objects properly escaped character classes. list: call character_class_escape elements list. default: coerce character character_class_escape.","code":""},{"path":"https://rex.r-lib.org/reference/counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts — counts","title":"Counts — counts","text":"Functions restrict regex specific number","code":""},{"path":"https://rex.r-lib.org/reference/counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts — counts","text":"","code":"n_times(x, n, type = c(\"greedy\", \"lazy\", \"possessive\"))  between(x, low, high, type = c(\"greedy\", \"lazy\", \"possessive\"))  at_least(x, n, type = c(\"greedy\", \"lazy\", \"possessive\"))  at_most(x, n, type = c(\"greedy\", \"lazy\", \"possessive\"))"},{"path":"https://rex.r-lib.org/reference/counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts — counts","text":"x regex pattern. n integer number type type match perform. three match types greedy: match longest string.  default matching type. lazy: match shortest string.  matches shortest string anchor point, necessarily shortest global string. possessive: match allow backtracking low integer number lower limit. high integer number upper limit.","code":""},{"path":"https://rex.r-lib.org/reference/counts.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Counts — counts","text":"n_times: x must occur exactly n times. : x must occur low high times. at_least: x must occur least n times. at_most: x must occur n times.","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/escape.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape characters for a regex — escape","title":"Escape characters for a regex — escape","text":"Escape characters regex","code":""},{"path":"https://rex.r-lib.org/reference/escape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape characters for a regex — escape","text":"","code":"escape(x)  # S3 method for regex escape(x)  # S3 method for character_class escape(x)  # S3 method for character escape(x)  # S3 method for default escape(x)  # S3 method for list escape(x)"},{"path":"https://rex.r-lib.org/reference/escape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape characters for a regex — escape","text":"x Object escape.","code":""},{"path":"https://rex.r-lib.org/reference/escape.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Escape characters for a regex — escape","text":"regex: Objects simply passed unchanged. character_class: Objects surrounded braces. character: Objects properly escaped regular expressions. default: default escape coerces character escapes. list: simply call escape elements list.","code":""},{"path":"https://rex.r-lib.org/reference/group.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grouped expression — group","title":"Create a grouped expression — group","text":"similar capture except store value group.  Best used want combine several parts together reference extract grouped value later.","code":""},{"path":"https://rex.r-lib.org/reference/group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grouped expression — group","text":"","code":"group(...)"},{"path":"https://rex.r-lib.org/reference/group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grouped expression — group","text":"... shortcuts, R variables, text, rex functions.","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/lookarounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookarounds — lookarounds","title":"Lookarounds — lookarounds","text":"Lookarounds","code":""},{"path":"https://rex.r-lib.org/reference/lookarounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookarounds — lookarounds","text":"","code":"x %if_next_is% y  x %if_next_isnt% y  x %if_prev_is% y  x %if_prev_isnt% y"},{"path":"https://rex.r-lib.org/reference/lookarounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookarounds — lookarounds","text":"x regex pattern. y regex pattern.","code":""},{"path":"https://rex.r-lib.org/reference/lookarounds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lookarounds — lookarounds","text":"functions provide interface perl lookarounds. Special binary functions used infer ordering, since often might wish match word / set characters conditional start end word. %if_next_is%: TRUE x follows y %if_next_isnt%: TRUE x follow y %if_prev_is%: TRUE y comes x %if_prev_isnt%: TRUE y come x","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/lookarounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookarounds — lookarounds","text":"","code":"stopifnot(grepl(rex(\"crab\" %if_next_is% \"apple\"), \"crabapple\", perl = TRUE)) stopifnot(grepl(rex(\"crab\" %if_prev_is% \"apple\"), \"applecrab\", perl = TRUE)) stopifnot(grepl(rex(range(\"a\", \"e\") %if_next_isnt% range(\"f\", \"g\")),   \"ah\", perl = TRUE)) stopifnot(grepl(rex(range(\"a\", \"e\") %if_next_is% range(\"f\", \"i\")),   \"ah\", perl = TRUE))"},{"path":"https://rex.r-lib.org/reference/not.html","id":null,"dir":"Reference","previous_headings":"","what":"Do not match — not","title":"Do not match — not","text":"match","code":""},{"path":"https://rex.r-lib.org/reference/not.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do not match — not","text":"","code":"not(..., type = c(\"greedy\", \"lazy\", \"possessive\"))"},{"path":"https://rex.r-lib.org/reference/not.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do not match — not","text":"... shortcuts, R variables, text, rex functions. type type match perform. three match types greedy: match longest string.  default matching type. lazy: match shortest string.  matches shortest string anchor point, necessarily shortest global string. possessive: match allow backtracking","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/or.html","id":null,"dir":"Reference","previous_headings":"","what":"Or — %or%","title":"Or — %or%","text":"special binary function %% can used specify set optional matches.","code":""},{"path":"https://rex.r-lib.org/reference/or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Or — %or%","text":"","code":"x %or% y  or(...)"},{"path":"https://rex.r-lib.org/reference/or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Or — %or%","text":"x string. y string. ... shortcuts, R variables, text, rex functions.","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/re_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Match function — re_matches","title":"Match function — re_matches","text":"Match function","code":""},{"path":"https://rex.r-lib.org/reference/re_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match function — re_matches","text":"","code":"re_matches(   data,   pattern,   global = FALSE,   options = NULL,   locations = FALSE,   ... )"},{"path":"https://rex.r-lib.org/reference/re_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match function — re_matches","text":"data character vector match pattern regular expression use matching global use global matching options regular expression options locations rather returning values matched (captured) string, return data.frame match locations string. ... options passed regexpr gregexpr","code":""},{"path":"https://rex.r-lib.org/reference/re_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match function — re_matches","text":"captures, returns logical vector length input character vector specifying relevant value matched .  captures regular expression, returns data.frame column capture group.  global TRUE, returns list data.frames.","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/re_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match function — re_matches","text":"","code":"string <- c(\"this is a\", \"test string\") re_matches(string, rex(\"test\")) # FALSE FALSE #> [1] FALSE  TRUE  # named capture re_matches(string, rex(capture(alphas, name = \"first_word\"), space,   capture(alphas, name = \"second_word\"))) #>   first_word second_word #> 1       this          is #> 2       test      string #   first_word second_word # 1       this          is # 2       test      string  # capture returns NA when it fails to match re_matches(string, rex(capture(\"test\"))) #>      1 #> 1 <NA> #> 2 test #      1 # 1 test # 2 <NA>"},{"path":"https://rex.r-lib.org/reference/re_substitutes.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitute regular expressions in a string with another string. — re_substitutes","title":"Substitute regular expressions in a string with another string. — re_substitutes","text":"Substitute regular expressions string another string.","code":""},{"path":"https://rex.r-lib.org/reference/re_substitutes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitute regular expressions in a string with another string. — re_substitutes","text":"","code":"re_substitutes(data, pattern, replacement, global = FALSE, options = NULL, ...)"},{"path":"https://rex.r-lib.org/reference/re_substitutes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitute regular expressions in a string with another string. — re_substitutes","text":"data character vector substitute pattern regular expression match replacement replacement text use global substitute occurrences options option flags ... options passed sub gsub","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/re_substitutes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Substitute regular expressions in a string with another string. — re_substitutes","text":"","code":"string <- c(\"this is a Test\", \"string\") re_substitutes(string, \"test\", \"not a test\", options = \"insensitive\") #> [1] \"this is a not a test\" \"string\"               re_substitutes(string, \"i\", \"x\", global = TRUE) #> [1] \"thxs xs a Test\" \"strxng\"         re_substitutes(string, \"(test)\", \"not a \\\\1\", options = \"insensitive\") #> [1] \"this is a not a Test\" \"string\""},{"path":"https://rex.r-lib.org/reference/regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular Expression — as.character.regex","title":"Regular Expression — as.character.regex","text":"Specify explicit regular expression.  expression must already escaped.","code":""},{"path":"https://rex.r-lib.org/reference/regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular Expression — as.character.regex","text":"","code":"# S3 method for regex as.character(x, ...)  # S3 method for regex print(x, ...)  regex(x, ...)"},{"path":"https://rex.r-lib.org/reference/regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regular Expression — as.character.regex","text":"x Object ... arguments","code":""},{"path":"https://rex.r-lib.org/reference/regex.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Regular Expression — as.character.regex","text":".character: coerce regex object character print: Print regex object","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/register_shortcuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Register the Rex shortcuts — register_shortcuts","title":"Register the Rex shortcuts — register_shortcuts","text":"using rex another package need call function register rex shortcuts spurious NOTEs global variables generated R CMD check.","code":""},{"path":"https://rex.r-lib.org/reference/register_shortcuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register the Rex shortcuts — register_shortcuts","text":"","code":"register_shortcuts(pkg_name)"},{"path":"https://rex.r-lib.org/reference/register_shortcuts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register the Rex shortcuts — register_shortcuts","text":"pkg_name package register shortcuts ","code":""},{"path":"https://rex.r-lib.org/reference/rex.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression. — rex","title":"Generate a regular expression. — rex","text":"Generate regular expression.","code":""},{"path":"https://rex.r-lib.org/reference/rex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression. — rex","text":"","code":"rex(..., env = parent.frame())"},{"path":"https://rex.r-lib.org/reference/rex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression. — rex","text":"... shortcuts, R variables, text, rex functions. env environment evaluate rex expression .","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/rex_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggles rex mode. — rex_mode","title":"Toggles rex mode. — rex_mode","text":"within rex mode, functions used within rex function attached, one can get e.g. auto-completion within editors.","code":""},{"path":"https://rex.r-lib.org/reference/rex_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggles rex mode. — rex_mode","text":"","code":"rex_mode()"},{"path":"https://rex.r-lib.org/reference/shortcuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcuts — shortcuts","title":"Shortcuts — shortcuts","text":"Commonly used character classes regular expressions.  shortcuts substituted inside rex calls.","code":""},{"path":"https://rex.r-lib.org/reference/shortcuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcuts — shortcuts","text":"","code":"shortcuts"},{"path":"https://rex.r-lib.org/reference/shortcuts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Shortcuts — shortcuts","text":"object class shortcut length 116.","code":""},{"path":"https://rex.r-lib.org/reference/shortcuts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shortcuts — shortcuts","text":"names(shortcuts) give full list available shortcuts.","code":""},{"path":[]},{"path":"https://rex.r-lib.org/reference/single_shortcuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Single shortcuts — single_shortcuts","title":"Single shortcuts — single_shortcuts","text":"shortcuts plural (-s) inverse (non_) form.","code":""},{"path":"https://rex.r-lib.org/reference/single_shortcuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single shortcuts — single_shortcuts","text":"","code":"single_shortcuts"},{"path":"https://rex.r-lib.org/reference/single_shortcuts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Single shortcuts — single_shortcuts","text":"object class shortcut length 18.","code":""},{"path":"https://rex.r-lib.org/reference/wildcards.html","id":null,"dir":"Reference","previous_headings":"","what":"Wildcards — wildcards","title":"Wildcards — wildcards","text":"Wildcards","code":""},{"path":"https://rex.r-lib.org/reference/wildcards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wildcards — wildcards","text":"","code":"zero_or_more(..., type = c(\"greedy\", \"lazy\", \"possessive\"))  one_or_more(..., type = c(\"greedy\", \"lazy\", \"possessive\"))  maybe(..., type = c(\"greedy\", \"lazy\", \"possessive\"))"},{"path":"https://rex.r-lib.org/reference/wildcards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wildcards — wildcards","text":"... shortcuts, R variables, text, rex functions. type type match perform. three match types greedy: match longest string.  default matching type. lazy: match shortest string.  matches shortest string anchor point, necessarily shortest global string. possessive: match allow backtracking","code":""},{"path":"https://rex.r-lib.org/reference/wildcards.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Wildcards — wildcards","text":"zero_or_more: match ... zero times. one_or_more: match ... one times. maybe: match ... zero one times.","code":""},{"path":[]},{"path":[]},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-121","dir":"Changelog","previous_headings":"","what":"Rex Version 1.2.1","title":"Rex Version 1.2.1","text":"CRAN release: 2021-11-26 Kevin Ushey now maintainer","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-120","dir":"Changelog","previous_headings":"","what":"Rex Version 1.2.0","title":"Rex Version 1.2.0","text":"CRAN release: 2020-04-21 %>% longer imported re-exported rex","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-112","dir":"Changelog","previous_headings":"","what":"Rex Version 1.1.2","title":"Rex Version 1.1.2","text":"CRAN release: 2017-10-19 Updating tests work testthat version 1.0.2.9000. Add m, matches s, substitutes aliases re_matches re_substitutes.","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-111","dir":"Changelog","previous_headings":"","what":"Rex Version 1.1.1","title":"Rex Version 1.1.1","text":"CRAN release: 2016-03-11 Vignette tweak ggplot2 2.0.0 print startup message time. Move register magrittr pipe .onLoad()","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-101","dir":"Changelog","previous_headings":"","what":"Rex Version 1.0.1","title":"Rex Version 1.0.1","text":"CRAN release: 2015-04-28 Work around ggplot2 bug windows fonts","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-100","dir":"Changelog","previous_headings":"","what":"Rex Version 1.0.0","title":"Rex Version 1.0.0","text":"Include capture results even locations = TRUE Add : operator character ranges Remove duplicate regex functino Don’t re-compute missing names Reduce code duplication Add examples lookarounds","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-020","dir":"Changelog","previous_headings":"","what":"Rex Version 0.2.0","title":"Rex Version 0.2.0","text":"CRAN release: 2014-11-26","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"enhancements-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"Rex Version 0.2.0","text":"Add newline shortcut add register_shortcuts allow use rex external packages without spurious NOTES.","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-011","dir":"Changelog","previous_headings":"","what":"Rex Version 0.1.1","title":"Rex Version 0.1.1","text":"CRAN release: 2014-10-21","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"enhancements-0-1-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"Rex Version 0.1.1","text":"re_matches now “locations” argument, returns start end locations match capture(s). Simplify regular expressions generated ‘some_of’ functions.","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Rex Version 0.1.1","text":"backslashes (“\\”) now properly escaped.","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"misc-0-1-1","dir":"Changelog","previous_headings":"","what":"Misc","title":"Rex Version 0.1.1","text":"Improve Rex mode documentation (#21 @Ironholds) Improve Log parsing Vignette copy Title (#18, #20 @Ironholds) Add links GitHub issues page DESCRIPTION","code":""},{"path":"https://rex.r-lib.org/news/index.html","id":"rex-version-010","dir":"Changelog","previous_headings":"","what":"Rex Version 0.1.0","title":"Rex Version 0.1.0","text":"CRAN release: 2014-10-14 Initial release","code":""}]
